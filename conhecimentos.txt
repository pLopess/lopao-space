Conhecimentos/ Comandos aprendidos durante o curso:

Começando:
     virtualenv venv                        #Criar o ambiente virtual nomeando de 'venv' (nomenclatura padrao)
     venv/Scripts/activate                  #Ativar o AV
     pip install django                     #Baixar o Django no AV
     django-admin startproject setup .      #Começar projeto chamando de 'setup' (nomenclatura padrao)
     python manage.py runserver             #Rodar o servidor



Settings:
Mudar a timezone (America/Sao_Paulo) e a linguagem (pt-br) do projeto fazendo alterações no arquivo settings.py


Segurança:
    1) Crie um novo arquivo chamado .env no diretório raiz da aplicação para armazenar a SECRET_KEY
        SECRET_KEY=<chave aleatória>

    pip install python-dotenv               #Baixar o pacote python-dotenv

    2) Importe os pacotes python-dotenv e os no arquivo settings.py
        from pathlib import os
        from dotenv import load_dotenv

    3) Importe a SECRET_KEY do arquivo .env e coloque dentro da variável SECRET_KEY no arquivo settings.py
        load_dotenv()
        SECRET_KEY = str(os.getenv('SECRET_KEY'))

    4) Gere um arquivo .gitignore no diretório raiz do projeto e inclua o arquivo .env como conteúdo
        Conteúdo do .gitignore:
        .env

        ou acesse o site gitignore.io
        coloque qual tecnologia vc esta trabalhando (no caso Django)
        copia tudo e cola no gitignore     
        #Para funcionar direitinho mantenha o uso da nomenclatura padrao!!!

App e views:
    1) Criar o primeiro app com o comando python manage.py startapp galeria

    2) Acesse o arquivo views.py dentro do diretório do app galeria e crie um função responsável por mostrar um HTML da página principal do site;
        from django.shortcuts import render

        def index(request):
            return render(request, 'index.html')  #arquivo criado depois na pasta templates

    3) Crie um novo arquivo chamado urls.py dentro do diretório da aplicação galeria;

    4) Crie uma “palheta” de urls dentro do arquivo urls.py (do diretório galeria) que leve à função index;
        from django.urls import path
        from galeria.views import index

        urlpatterns = [
            path('', index)
        ]

    5) Altere o arquivo urls.py do diretório do projeto (setup) para incluir a "palheta" de urls mencionada no urls.py de galeria;
        from django.contrib import admin
        from django.urls import path, include

        urlpatterns = [
            path('admin/', admin.site.urls),
            path('', include('galeria.urls'))
        ]


    6) Isolamos o template da app galeria, criando uma nova pasta chamada templates e reconfigurando o settings.py.
        TEMPLATES = [
            'DIRS': [os.path.join(BASE_DIR, 'templates')]

        Cria o arquivo index.html dentro da pasta templates